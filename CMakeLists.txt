cmake_minimum_required(VERSION 3.16.4)
set(flame_path "$ENV{FLAME_PATH}")
include("${flame_path}/utils.cmake")
set_property(GLOBAL PROPERTY USE_FOLDERS ON)
add_definitions(-W0 -std:c++latest)

project(dota_pubg)

set_output_dir("${CMAKE_SOURCE_DIR}/bin")

set(GLM_INCLUDE_DIR "")
set(IMGUI_DIR "")
file(STRINGS "${flame_path}/build/CMakeCache.txt" flame_cmake_cache)
foreach(s ${flame_cmake_cache})
	if(GLM_INCLUDE_DIR STREQUAL "")
		string(REGEX MATCH "GLM_INCLUDE_DIR:PATH=(.*)" res "${s}")
		if(NOT res STREQUAL "")
			set(GLM_INCLUDE_DIR ${CMAKE_MATCH_1})
		endif()
	endif()
	if(IMGUI_DIR STREQUAL "")
		string(REGEX MATCH "IMGUI_DIR:PATH=(.*)" res "${s}")
		if(NOT res STREQUAL "")
			set(IMGUI_DIR ${CMAKE_MATCH_1})
		endif()
	endif()
endforeach()

file(GLOB_RECURSE source_files "cpp/*.h*" "cpp/*.c*")
add_library(cpp SHARED ${source_files})
target_compile_definitions(cpp PUBLIC USE_IMGUI)
target_compile_definitions(cpp PUBLIC "IMPORT=__declspec(dllimport)")
target_compile_definitions(cpp PUBLIC "EXPORT=__declspec(dllexport)")
target_compile_definitions(cpp PUBLIC IMGUI_USER_CONFIG="${flame_path}/source/imgui/config.h")
target_include_directories(cpp PUBLIC "${GLM_INCLUDE_DIR}")
target_include_directories(cpp PUBLIC "${IMGUI_DIR}")
target_include_directories(cpp PUBLIC "${flame_path}/include")
target_link_libraries(cpp "${flame_path}/bin/debug/imgui.lib")
target_link_libraries(cpp "${flame_path}/bin/debug/flame_foundation.lib")
target_link_libraries(cpp "${flame_path}/bin/debug/flame_graphics.lib")
target_link_libraries(cpp "${flame_path}/bin/debug/flame_universe.lib")

file(GENERATE OUTPUT "$<TARGET_FILE_DIR:cpp>/cpp.typedesc" CONTENT "${CMAKE_CURRENT_SOURCE_DIR}/cpp" TARGET cpp)
add_custom_command(TARGET cpp POST_BUILD COMMAND "${flame_path}/bin/debug/typeinfogen.exe" $<TARGET_FILE:cpp>)

file(TO_NATIVE_PATH "${CMAKE_SOURCE_DIR}" current_path)
add_custom_target(copy_binaries 
	COMMAND xcopy "${flame_path}\\bin\\debug\\*.dll"				"${current_path}\\bin\\debug"			/Y /D	
	COMMAND xcopy "${flame_path}\\bin\\debug\\*.typeinfo"			"${current_path}\\bin\\debug"			/Y /D
	COMMAND xcopy "${flame_path}\\bin\\relwithdebinfo\\*.dll"		"${current_path}\\bin\\relwithdebinfo"	/Y /D	
	COMMAND xcopy "${flame_path}\\bin\\relwithdebinfo\\*.typeinfo"	"${current_path}\\bin\\relwithdebinfo"	/Y /D)

add_executable(dota_pubg "app.cpp")
add_dependencies(dota_pubg copy_binaries)
target_link_libraries(dota_pubg cpp)
set_target_properties(dota_pubg PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
